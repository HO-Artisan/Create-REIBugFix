plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id "io.github.juuxel.loom-vineflower" version "1.+"
	id "io.github.p03w.machete" version "1.1.4"
	id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

repositories {
	mavenLocal()
	mavenCentral()
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.tterrag.com/" } // Flywheel
	maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes

	maven { url = "https://maven.quiltmc.org/repository/release" } // QM
	maven { url = "https://maven.parchmentmc.org" } // Parchment
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${project.qm_version}:intermediary-v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}") {
		exclude(Map.of("module", "forge-config-api-port-fabric-547434"))
		exclude(group: "io.github.fabricators_of_create")
	}
	modImplementation "io.github.fabricators_of_create.Porting-Lib:Porting-Lib:${project.portinglib_version}"
	modLocalRuntime "maven.modrinth:forge-config-api-port:${project.forgeconfigapiport_version}"

	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
